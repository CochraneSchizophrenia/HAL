/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package revmanhalcochranemode;

import static com.sun.org.apache.regexp.internal.RETest.test;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.event.WindowEvent;
import static java.awt.image.ImageObserver.WIDTH;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ImageIcon;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.Attr;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.FileInputStream; 
import java.io.FileOutputStream; 
import java.io.IOException; 
import java.nio.channels.FileChannel; 
import java.text.SimpleDateFormat;
import java.util.Collection;
import java.util.Collections;
import java.util.Date;
import java.util.Vector;
import org.w3c.dom.NodeList;

/**
 *
 * @author msash9
 */
public class FrameReview extends javax.swing.JFrame {

      private String revMan;
    private String csv;
    private String grade;
    private Vector vScales = new Vector();
    private Vector vExportedCsv = new Vector();
    private Element subsectionSub;
    private Element subsectionSub1;
    private Element subsectionSub2;
    private Element subsectionSub3;
    
    private int counterSubpoint1=1;
    private int counterSubpoint2=1;
    private int counterSubpoint3=1;
    private int counterSubpoint4=1;
    
    private int counterGeneral=0;
    
    private int counterFirstPoint1=1;
    private int counterFirstPoint2=1;
    private int counterFirstPoint3=1;
    private int counterFirstPoint4=1;
    
    
    private boolean lastEntry=false;
    private boolean firstTime = true;
    private boolean firstTime1 = true;
    private boolean firstTime2 = true;
    private boolean firstTime3 = true;
    private boolean nameScale = false;
    private boolean abbr = false;
    /**
     * Creates new form Test
     */
    public FrameReview(String revFile, String csvFile) {
        initComponents();
        jPanel1.setBackground(new Color(226,226,226));
        this.setBackground(new Color(226,226,226));
        this.setLocation(230,150);
        this.setTitle("RevMan Hal - Review");
        revMan = revFile;
        csv = csvFile;
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        cbSelectAll = new javax.swing.JCheckBox();
        cbAbstract = new javax.swing.JCheckBox();
        cbResult = new javax.swing.JCheckBox();
        cbResultOfSearch = new javax.swing.JCheckBox();
        cbDescription = new javax.swing.JCheckBox();
        cbEffects = new javax.swing.JCheckBox();
        cbDiscussion = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        box_style = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        cbLanguage = new javax.swing.JComboBox();
        btn_back = new javax.swing.JButton();
        btn_start = new javax.swing.JButton();
        btn_exit = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel8.setText("<html><body>In this part of the program you can add automatic generated text to the points listed on the left side.<p><p> <b>Please note</b>:<p> 1. Abstract and Discussion are not working without SoF table!<p> 2. The choices on the left side are only working for 'results of search' and 'effects of intervention'<p> 3. The uploaded RevMan file has to be in the stage of a review!</body></html>");
        jLabel8.setToolTipText("");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 32)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 249));
        jLabel1.setText("RevMan HAL");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 28)); // NOI18N
        jLabel2.setText("Review");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jLabel9.setText("<html><body>In this part of the program you can add automatic generated text to the points listed on the left side.<p><p> <b>Please note</b>:<p> 1. Abstract and Discussion are not working without SoF table!<p> 2. The choices on the left side are only working for 'results of search' and 'effects of intervention'<p> 3. The uploaded RevMan file has to be in the stage of a review!</body></html>");
        jLabel9.setToolTipText("");

        cbSelectAll.setBackground(new java.awt.Color(247, 247, 247));
        cbSelectAll.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbSelectAll.setText("SELECT ALL");
        cbSelectAll.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbSelectAllItemStateChanged(evt);
            }
        });

        cbAbstract.setBackground(new java.awt.Color(247, 247, 247));
        cbAbstract.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbAbstract.setText("add 'ABSTRACT'");

        cbResult.setBackground(new java.awt.Color(247, 247, 247));
        cbResult.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbResult.setText("add RESULTS");
        cbResult.setActionCommand("add 'RESULTS'");
        cbResult.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbResultItemStateChanged(evt);
            }
        });

        cbResultOfSearch.setBackground(new java.awt.Color(247, 247, 247));
        cbResultOfSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbResultOfSearch.setText("add 'RESULTS OF SEARCH'");

        cbDescription.setBackground(new java.awt.Color(247, 247, 247));
        cbDescription.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbDescription.setText("add 'DESCRIPTION OF INCL. STUDIES'");
        cbDescription.setActionCommand("add 'Description of incl. studies'");

        cbEffects.setBackground(new java.awt.Color(247, 247, 247));
        cbEffects.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbEffects.setText("add 'EFFECTS OF INTERVENTION'");

        cbDiscussion.setBackground(new java.awt.Color(247, 247, 247));
        cbDiscussion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbDiscussion.setText("add 'DISCUSSION'");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("1. Please choose way of modification");

        box_style.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        box_style.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1. Full text (excludes fixed/random label)", "2. Full text (includes fixed/random label)", "3. As number 2 and incl. individual studies", "4. Simple - just numbers" }));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("2. Please choose your language");

        cbLanguage.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbLanguage.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "English", "German" }));

        btn_back.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/revmanhalcochranemode/back.png"))); // NOI18N
        btn_back.setText(" BACK");
        btn_back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_backMouseClicked(evt);
            }
        });

        btn_start.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_start.setIcon(new javax.swing.ImageIcon(getClass().getResource("/revmanhalcochranemode/start.png"))); // NOI18N
        btn_start.setText(" GO!");
        btn_start.setToolTipText("This will also create a backup rm5-file in same directory.");
        btn_start.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_startMouseClicked(evt);
            }
        });

        btn_exit.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/revmanhalcochranemode/exit.png"))); // NOI18N
        btn_exit.setText("EXIT");
        btn_exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_exitMouseClicked(evt);
            }
        });

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/revmanhalcochranemode/hal.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(box_style, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(cbLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbDiscussion)
                                            .addComponent(cbAbstract)
                                            .addComponent(cbResult)
                                            .addComponent(cbSelectAll))
                                        .addGap(168, 168, 168))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cbDescription)
                                        .addComponent(cbResultOfSearch)
                                        .addComponent(cbEffects))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(49, 49, 49))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_start, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(187, 187, 187)
                                .addComponent(btn_exit))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)
                                .addGap(33, 33, 33)))
                        .addGap(30, 30, 30))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(box_style, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbSelectAll)
                        .addGap(20, 20, 20)
                        .addComponent(cbAbstract)
                        .addGap(5, 5, 5)
                        .addComponent(cbResult)
                        .addGap(15, 15, 15)
                        .addComponent(cbResultOfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(cbDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(cbEffects, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbDiscussion, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_start)
                    .addComponent(btn_exit, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbSelectAllItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbSelectAllItemStateChanged
        if(cbSelectAll.isSelected())
        {
            cbAbstract.setSelected(true);
            cbDiscussion.setSelected(true);
            cbResult.setSelected(true);
        }
        else
        {
            cbAbstract.setSelected(false);
            cbDiscussion.setSelected(false);
            cbResult.setSelected(false);

        }
    }//GEN-LAST:event_cbSelectAllItemStateChanged

    private void cbResultItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbResultItemStateChanged

        if(cbResult.isSelected())
        {
            cbResultOfSearch.setSelected(true);
            cbEffects.setSelected(true);
            cbDescription.setSelected(true);
        }
        else
        {
            cbResultOfSearch.setSelected(false);
            cbEffects.setSelected(false);
            cbDescription.setSelected(false);

        }
    }//GEN-LAST:event_cbResultItemStateChanged

    private void btn_exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_exitMouseClicked
        int resultBeenden = JOptionPane.showConfirmDialog(this, "Do you really want to end the program?", "EXIT", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (resultBeenden==JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_btn_exitMouseClicked

    private void btn_startMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_startMouseClicked

        String language = (String)cbLanguage.getSelectedItem();

        System.out.println("in startform: "+language);

        try{
            int style = box_style.getSelectedIndex();

            String csvFile = csv;
            String gradeFile = grade;
            String revManFile =  revMan;

            if (!revManFile.equals("") && !csvFile.equals(""))
            {

                File inF = new File(revManFile);
                File outF = new File(revManFile.substring(0,revManFile.indexOf("."))+"_Backup.rm5");
                copyFile(inF, outF);

                RemoveResults rmRs = new RemoveResults();
                if (rmRs.main(revManFile) == false)
                {
                    JOptionPane.showMessageDialog(this, "An Error occured. Result section could not be deleted but a backup file was created.", "Error", JOptionPane.ERROR_MESSAGE);
                }
                if (style == 0)  // Complex #1 was chosen
                {
                    Complex1 c1 = new Complex1(language);

                    this.writeChecked(language, revManFile, csvFile, c1, null, null, null);

                }

                else if(style == 1) // Complex #2 was chosen
                {
                    Complex2 c2 = new Complex2();
                    this.writeChecked(language, revManFile, csvFile, null, c2, null, null);

                }
                else if(style == 2) // Complex #2 - incl. Studies was chosen
                {
                    Complex2_Studies c2withSt = new Complex2_Studies();
                    this.writeChecked(language, revManFile, csvFile, null, null, c2withSt, null);
                }
                else if (style == 3)
                {    // Simple was chosen
                    Simple simpl = new Simple();
                    this.writeChecked(language, revManFile, csvFile, null, null, null, simpl);
                }

            }
        } catch (Exception e){
            System.out.println(e);
            e.printStackTrace();

        }
    }//GEN-LAST:event_btn_startMouseClicked

    private void btn_backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_backMouseClicked
        this.dispose();
        FrameStart start = new FrameStart(revMan, csv);
        start.setVisible(true);
        start.validate();
    }//GEN-LAST:event_btn_backMouseClicked
 public void writeChecked(String language, String revManFile, String csvFile, Complex1 compl1, Complex2 compl2, Complex2_Studies compl2Studies, Simple simpl) {

        if (cbDiscussion.isSelected() && cbResultOfSearch.isSelected() && cbDescription.isSelected() && cbEffects.isSelected() && cbAbstract.isSelected()) //SELECT ALL!
        {
            SearchResults rs = new SearchResults(language);
            Description ds = new Description(revManFile, csv);
            SOFDiscussion disc = new SOFDiscussion(language);
            Abstract go = new Abstract(language);
            if (compl1 != null) {
                if (compl1.main(revManFile, csvFile) == true && rs.main(revManFile) == true && ds.main() == true && disc.main(revManFile) == true && go.main(revManFile)) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2 != null) {
                if (compl2.main(revManFile, csvFile) == true && rs.main(revManFile) == true && ds.main() == true && disc.main(revManFile) == true && go.main(revManFile)) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2Studies != null) {
                if (compl2Studies.main(revManFile, csvFile) == true && rs.main(revManFile) == true && ds.main() == true && disc.main(revManFile) == true && go.main(revManFile)) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (simpl != null) {
                if (simpl.main(revManFile, csvFile) == true && rs.main(revManFile) == true && ds.main() == true && disc.main(revManFile) == true && go.main(revManFile)) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else if (cbResultOfSearch.isSelected() && cbDescription.isSelected() && cbEffects.isSelected()) // All points of Result!                  
        {
            System.out.println("Dinna!");
            SearchResults rs = new SearchResults(language);
            Description ds = new Description(revManFile, csv);
            if (compl1 != null) {
                if (compl1.main(revManFile, csvFile) == true && rs.main(revManFile) == true && ds.main() == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2 != null) {
                if (compl2.main(revManFile, csvFile) == true && rs.main(revManFile) == true && ds.main() == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2Studies != null) {
                if (compl2Studies.main(revManFile, csvFile) == true && rs.main(revManFile) == true && ds.main() == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (simpl != null) {
                if (simpl.main(revManFile, csvFile) == true && rs.main(revManFile) == true && ds.main() == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

        } else if (cbResultOfSearch.isSelected() && cbDescription.isSelected()) // Result of Search + Description                   
        {
            SearchResults rs = new SearchResults(language);
            Description ds = new Description(revManFile, csv);
            if (rs.main(revManFile) == true && ds.main() == true) {
                JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                        + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (cbResultOfSearch.isSelected() && cbEffects.isSelected()) // Result of Search + Effects                   
        {

            SearchResults rs = new SearchResults(language);
            System.out.println("in else if in method: " + compl1.toString());

            if (compl1 != null) {

                if (compl1.main(revManFile, csvFile) == true && rs.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2 != null) {
                if (compl2.main(revManFile, csvFile) == true && rs.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2Studies != null) {
                if (compl2Studies.main(revManFile, csvFile) == true && rs.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (simpl != null) {
                if (simpl.main(revManFile, csvFile) == true && rs.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }

            }
        } else if (cbEffects.isSelected() && cbDescription.isSelected()) // Effects + Description                   
        {

            Description ds = new Description(revManFile, csv);
            if (compl1 != null) {

                if (compl1.main(revManFile, csvFile) == true && ds.main() == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2 != null) {
                if (compl2.main(revManFile, csvFile) == true && ds.main() == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2Studies != null) {
                if (compl2Studies.main(revManFile, csvFile) == true && ds.main() == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (simpl != null) {
                if (simpl.main(revManFile, csvFile) == true && ds.main() == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }

            }

        } else if (cbResultOfSearch.isSelected() && cbDiscussion.isSelected()) // Result of Search + Discussion                    
        {
            SOFDiscussion sof = new SOFDiscussion(language);
            SearchResults rs = new SearchResults(language);

            if (rs.main(revManFile) == true && sof.main(revManFile) == true) {

                JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                        + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (cbEffects.isSelected() && cbDiscussion.isSelected()) // Effects + Discussion                   
        {
            SOFDiscussion ds = new SOFDiscussion(language);
            if (compl1 != null) {

                if (compl1.main(revManFile, csvFile) == true && ds.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2 != null) {
                if (compl2.main(revManFile, csvFile) == true && ds.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2Studies != null) {
                if (compl2Studies.main(revManFile, csvFile) == true && ds.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (simpl != null) {
                if (simpl.main(revManFile, csvFile) == true && ds.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }

            }

        } else if (cbDiscussion.isSelected() && cbDescription.isSelected()) // Discussion + Description                  
        {
            SOFDiscussion dis = new SOFDiscussion(language);
            Description ds = new Description(revManFile, csv);

            if (dis.main(revManFile) == true && ds.main() == true) {
                JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                        + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (cbDiscussion.isSelected() && cbAbstract.isSelected()) // Discussion + Abstract                 
        {
            SOFDiscussion dis = new SOFDiscussion(language);
            Abstract go = new Abstract(language);
            if (dis.main(revManFile) == true && go.main(revManFile) == true) {
                JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                        + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (cbAbstract.isSelected() && cbDescription.isSelected()) // Abstract + Description                   
        {
            Description des = new Description(revManFile, csv);
            Abstract go = new Abstract(language);
            if (des.main() == true && go.main(revManFile) == true) {
                JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                        + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (cbAbstract.isSelected() && cbResultOfSearch.isSelected()) // Abstract + ResultOfSearch                   
        {
            Abstract go = new Abstract(language);
            SearchResults rs = new SearchResults(language);
            if (rs.main(revManFile) == true && go.main(revManFile) == true) {
                JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                        + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (cbAbstract.isSelected() && cbEffects.isSelected()) // Abstract + Effects                   
        {
            Abstract go = new Abstract(language);

            if (compl1 != null) {

                if (compl1.main(revManFile, csvFile) == true && go.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2 != null) {
                if (compl2.main(revManFile, csvFile) == true && go.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2Studies != null) {
                if (compl2Studies.main(revManFile, csvFile) == true && go.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (simpl != null) {
                if (simpl.main(revManFile, csvFile) == true && go.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }

            }

        } else if (cbDiscussion.isSelected() && cbResultOfSearch.isSelected() && cbDescription.isSelected() && cbEffects.isSelected()) // All points of Result + Discussion!                  
        {
            System.out.println("Dinna!");
            SearchResults rs = new SearchResults(language);
            Description ds = new Description(revManFile, csv);
            SOFDiscussion disc = new SOFDiscussion(language);
            if (compl1 != null) {
                if (compl1.main(revManFile, csvFile) == true && rs.main(revManFile) == true && ds.main() == true && disc.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2 != null) {
                if (compl2.main(revManFile, csvFile) == true && rs.main(revManFile) == true && ds.main() == true && disc.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2Studies != null) {
                if (compl2Studies.main(revManFile, csvFile) == true && rs.main(revManFile) == true && ds.main() == true && disc.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (simpl != null) {
                if (simpl.main(revManFile, csvFile) == true && rs.main(revManFile) == true && ds.main() == true && disc.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

        } else if (cbDiscussion.isSelected() && cbResultOfSearch.isSelected() && cbDescription.isSelected() && cbEffects.isSelected()) // All points of Result+Abstract!                  
        {
            System.out.println("Dinna!");
            SearchResults rs = new SearchResults(language);
            Description ds = new Description(revManFile, csv);
            Abstract go = new Abstract(language);
            if (compl1 != null) {
                if (compl1.main(revManFile, csvFile) == true && rs.main(revManFile) == true && ds.main() == true && go.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2 != null) {
                if (compl2.main(revManFile, csvFile) == true && rs.main(revManFile) == true && ds.main() == true && go.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2Studies != null) {
                if (compl2Studies.main(revManFile, csvFile) == true && rs.main(revManFile) == true && ds.main() == true && go.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (simpl != null) {
                if (simpl.main(revManFile, csvFile) == true && rs.main(revManFile) == true && ds.main() == true && go.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

        } else if (cbDiscussion.isSelected() && cbDescription.isSelected() && cbEffects.isSelected()) // Discussion + Description + Effects                  
        {
            Description desc = new Description(revManFile, csv);
            SOFDiscussion ds = new SOFDiscussion(language);
            if (compl1 != null) {

                if (compl1.main(revManFile, csvFile) == true && desc.main() == true && ds.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2 != null) {
                if (compl2.main(revManFile, csvFile) == true && desc.main() == true && ds.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2Studies != null) {
                if (compl2Studies.main(revManFile, csvFile) == true && desc.main() == true && ds.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (simpl != null) {
                if (simpl.main(revManFile, csvFile) == true && desc.main() == true && ds.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }

            }
        } else if (cbDiscussion.isSelected() && cbEffects.isSelected() && cbResultOfSearch.isSelected()) // Discussion + Effects + Result of Search               
        {
            SOFDiscussion ds = new SOFDiscussion(language);
            SearchResults rs = new SearchResults(language);
            if (compl1 != null) {

                if (compl1.main(revManFile, csvFile) == true && rs.main(revManFile) == true && ds.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2 != null) {
                if (compl2.main(revManFile, csvFile) == true && rs.main(revManFile) == true && ds.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2Studies != null) {
                if (compl2Studies.main(revManFile, csvFile) == true && rs.main(revManFile) == true && ds.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (simpl != null) {
                if (simpl.main(revManFile, csvFile) == true && rs.main(revManFile) == true && ds.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

        } else if (cbDiscussion.isSelected() && cbDescription.isSelected() && cbResultOfSearch.isSelected()) // Discussion + Description + Result of Search               
        {
            SOFDiscussion ds = new SOFDiscussion(language);
            Description desc = new Description(revManFile, csv);
            SearchResults rs = new SearchResults(language);
            if (rs.main(revManFile) == true && ds.main(revManFile) == true && desc.main() == true) {
                JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                        + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (cbAbstract.isSelected() && cbDescription.isSelected() && cbEffects.isSelected()) // Abstract + Description + Effects                  
        {
            Description desc = new Description(revManFile, csv);
            Abstract go = new Abstract(language);
            if (compl1 != null) {

                if (compl1.main(revManFile, csvFile) == true && go.main(revManFile) == true && desc.main() == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2 != null) {
                if (compl2.main(revManFile, csvFile) == true && go.main(revManFile) == true && desc.main() == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2Studies != null) {
                if (compl2Studies.main(revManFile, csvFile) == true && go.main(revManFile) == true && desc.main() == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (simpl != null) {
                if (simpl.main(revManFile, csvFile) == true && go.main(revManFile) == true && desc.main() == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

        } else if (cbAbstract.isSelected() && cbEffects.isSelected() && cbResultOfSearch.isSelected()) // Abstract + Effects + Result of Search               
        {
            Abstract go = new Abstract(language);
            SearchResults rs = new SearchResults(language);
            if (compl1 != null) {

                if (compl1.main(revManFile, csvFile) == true && go.main(revManFile) == true && rs.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2 != null) {
                if (compl2.main(revManFile, csvFile) == true && go.main(revManFile) == true && rs.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2Studies != null) {
                if (compl2Studies.main(revManFile, csvFile) == true && go.main(revManFile) == true && rs.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (simpl != null) {
                if (simpl.main(revManFile, csvFile) == true && go.main(revManFile) == true && rs.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else if (cbAbstract.isSelected() && cbDescription.isSelected() && cbResultOfSearch.isSelected()) // Abstract + Description + Result of Search               
        {
            Description desc = new Description(revManFile, csv);
            Abstract go = new Abstract(language);
            SearchResults rs = new SearchResults(language);
            if (rs.main(revManFile) == true && go.main(revManFile) == true && desc.main() == true) {
                JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                        + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (cbDiscussion.isSelected() && cbAbstract.isSelected() && cbResultOfSearch.isSelected()) // Discussion + Abstract + Result of Search               
        {
            SOFDiscussion ds = new SOFDiscussion(language);
            Abstract go = new Abstract(language);
            SearchResults rs = new SearchResults(language);
            if (rs.main(revManFile) == true && ds.main(revManFile) == true && go.main(revManFile) == true) {
                JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                        + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (cbDiscussion.isSelected() && cbAbstract.isSelected() && cbDescription.isSelected()) // Discussion + Abstract + Description          
        {
            SOFDiscussion ds = new SOFDiscussion(language);
            Description desc = new Description(revManFile, csv);
            Abstract go = new Abstract(language);
            if (go.main(revManFile) == true && ds.main(revManFile) == true && desc.main() == true) {
                JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                        + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (cbDiscussion.isSelected() && cbAbstract.isSelected() && cbEffects.isSelected()) // Discussion + Abstract + Effects          
        {

            Abstract go = new Abstract(language);
            if (compl1 != null) {

                if (compl1.main(revManFile, csvFile) == true && go.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2 != null) {
                if (compl2.main(revManFile, csvFile) == true && go.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2Studies != null) {
                if (compl2Studies.main(revManFile, csvFile) == true && go.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (simpl != null) {
                if (simpl.main(revManFile, csvFile) == true && go.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else if (cbDiscussion.isSelected() && cbAbstract.isSelected() && cbDescription.isSelected() && cbResultOfSearch.isSelected()) // Discussion + Abstract + Description + ResultOfSearch         
        {
            SOFDiscussion ds = new SOFDiscussion(language);
            Description desc = new Description(revManFile, csv);
            Abstract go = new Abstract(language);
            SearchResults rs = new SearchResults(language);
            if (rs.main(revManFile) == true && ds.main(revManFile) == true && desc.main() == true && go.main(revManFile) == true) {
                JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                        + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (cbDiscussion.isSelected() && cbAbstract.isSelected() && cbDescription.isSelected() && cbEffects.isSelected()) // Discussion + Abstract + Description + Effects         
        {
            SOFDiscussion ds = new SOFDiscussion(language);
            Description desc = new Description(revManFile, csv);
            Abstract go = new Abstract(language);
            if (compl1 != null) {

                if (compl1.main(revManFile, csvFile) == true && go.main(revManFile) == true && ds.main(revManFile) == true && desc.main() == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2 != null) {
                if (compl2.main(revManFile, csvFile) == true && go.main(revManFile) == true && ds.main(revManFile) == true && desc.main() == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2Studies != null) {
                if (compl2Studies.main(revManFile, csvFile) == true && go.main(revManFile) == true && ds.main(revManFile) == true && desc.main() == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (simpl != null) {
                if (simpl.main(revManFile, csvFile) == true && go.main(revManFile) == true && ds.main(revManFile) == true && desc.main() == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else if (cbDiscussion.isSelected() && cbAbstract.isSelected() && cbEffects.isSelected() && cbResultOfSearch.isSelected()) // Discussion + Abstract + Effects + ResultOfSearch         
        {
            SOFDiscussion ds = new SOFDiscussion(language);
            Abstract go = new Abstract(language);
            SearchResults rs = new SearchResults(language);
            if (compl1 != null) {

                if (compl1.main(revManFile, csvFile) == true && go.main(revManFile) == true && ds.main(revManFile) == true && rs.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2 != null) {
                if (compl2.main(revManFile, csvFile) == true && go.main(revManFile) == true && ds.main(revManFile) == true && rs.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2Studies != null) {
                if (compl2Studies.main(revManFile, csvFile) == true && go.main(revManFile) == true && ds.main(revManFile) == true && rs.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (simpl != null) {
                if (simpl.main(revManFile, csvFile) == true && go.main(revManFile) == true && ds.main(revManFile) == true && rs.main(revManFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured File could not be modified correctly but a backup file was created." + "/n"
                            + "" + "If you have selected more than one point, you could try to select less or only one point. ", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else if (cbResultOfSearch.isSelected()) //just Result of Search
        {
            SearchResults rs = new SearchResults(language);

            if (rs.main(revManFile) == true) {
                JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
            } else {
                System.out.println(rs.main(revManFile));
                JOptionPane.showMessageDialog(this, "An Error occured. File could not be modified correctly but a backup file was created.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (cbDiscussion.isSelected()) //just Discussion
        {

            SOFDiscussion sd = new SOFDiscussion(language);

            if (sd.main(revManFile) == true) {
                JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.\n FURTHERMORE TEXT HAS TO BE PROOFREAD!", "Action complete", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "An Error occured. File could not be modified correctly but a backup file was created.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if (cbEffects.isSelected()) //just Effects of Intervention
        {
            if (compl1 != null) {
                if (compl1.main(revManFile, csvFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured. File could not be modified correctly but a backup file was created.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2 != null) {
                if (compl2.main(revManFile, csvFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured. File could not be modified correctly but a backup file was created.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (compl2Studies != null) {
                if (compl2Studies.main(revManFile, csvFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured. File could not be modified correctly but a backup file was created.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            } else if (simpl != null) {
                if (simpl.main(revManFile, csvFile) == true) {
                    JOptionPane.showMessageDialog(this, "The file was modified and saved successfully!\n PLEASE NOTE: Text will NOT appear until the review is closed and reopened.", "Action complete", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "An Error occured. File could not be modified correctly but a backup file was created.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

        } else if (cbAbstract.isSelected()) // just Abstract                    
        {
            Abstract go = new Abstract(language);
            go.main(revManFile);

        } else if (cbDescription.isSelected()) //just Description
        {
            Description d = new Description(revMan, csv);
            if (d.main() == true) {
                System.out.println("loooooift");
            } else {
                System.out.println("loooooift net");
            }
        } else if (cbSelectAll.isSelected())//All points that are available
        {

        }

    }

    public static void copyFile(File in, File out) throws IOException {
        FileChannel inChannel = new FileInputStream(in).getChannel();
        FileChannel outChannel = new FileOutputStream(out).getChannel();
        inChannel.transferTo(0, inChannel.size(), outChannel);
    }

    public String getLanguage() {
        String language = (String) cbLanguage.getItemAt(1);
        System.out.println("lang in Methode: " + language);
        return language;
    }

    private static Document getDocument(String file) {
        try {
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            factory.setIgnoringComments(true);
            factory.setIgnoringElementContentWhitespace(true);
            DocumentBuilder builder = factory.newDocumentBuilder();
            return builder.parse(file);
        } catch (Exception e) {
            return null;
        }
    }
      protected void processWindowEvent(WindowEvent e)             // for pressing the "x" in the top right corner
 {
        if(e.getID()==WindowEvent.WINDOW_CLOSING)
  {

  if(JOptionPane.showConfirmDialog(null, "<html><body>Do you really want to close the program?<body><html>"   
     , "WARNING",
     JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
   {
    super.processWindowEvent(e);
                                System.exit(0);
                        }
                }
    }
    
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox box_style;
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_exit;
    private javax.swing.JButton btn_start;
    private javax.swing.JCheckBox cbAbstract;
    private javax.swing.JCheckBox cbDescription;
    private javax.swing.JCheckBox cbDiscussion;
    private javax.swing.JCheckBox cbEffects;
    private javax.swing.JComboBox cbLanguage;
    private javax.swing.JCheckBox cbResult;
    private javax.swing.JCheckBox cbResultOfSearch;
    private javax.swing.JCheckBox cbSelectAll;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
